# this script just makes dummy files/directories for use in testing yona

function main {
	START_DIR=$(pwd)
	DATA_DIR=$(pwd)/scratch/testdata
	# --parents also prevents any errors being thrown
	mkdir --parents $DATA_DIR

	case $1 in
		file) single_file;;
		project)
			shift
			project $@;;
		-h|--help)
			cat <<- EOF
			This script will populate scratch/testdata with files you can use to 
			test out yona with.
			Please note this file should be [3msourced[0m, not executed!
			Usage:
			. seed file
				Make files for testing single file mode
			. seed project {npm,npm-deep,make,yona}
				Make files & directories for testing project mode.
				The any number of the options in the braces can be specified,
				so if you want a Makefile & a .yona file, run
					. seed project make yona
			EOF
			;;
		*) echo "Please specify what you want to seed for!";;
	esac
}

function clean {
	if [ -d "$DATA_DIR" -a -n "$(ls -A $DATA_DIR)" ]
	then
		rm -r $DATA_DIR/*
	fi
	if [ -d "$DATA_DIR/.git" ]
	then
		rm -r $DATA_DIR/.git
	fi
}

function single_file {
	cd $DATA_DIR
	clean
	cat > hello.go <<- EOF
	package main
	func main() {
	    println("Hello, World! - from Go!")
	}
	EOF
	cat > hello.c <<- EOF
	#include <stdio.h>
	int main() {
	    printf("Hello, World! - from C!\n");
	}
	EOF
	cat > hello.py <<- EOF
	print("Hello, World! - from python!")
	EOF
	cat > Hello.java <<- EOF
	class Hello {
	    public static void main(String[] args) {
	        System.out.println("Hello, World! - from Java!");
		}
	}
	EOF
	cd $START_DIR
}


function project {
	cd $DATA_DIR
	clean
	mkdir -p very/deep/project
	mkdir .git
	for arg in $@
	do
		case $arg in
			make)
				echo -e "makeCommand:\n\techo "\
					"Running a command from a makefile!"\
					"\nbuild:\n\techo "\
					"Overrode an npm script, but not a .yona command!" \
					> very/Makefile
				;;
			yona)
				cat > very/.yona <<- EOF
				yonaCommand = echo "Running a command from a .yona file!"
				build = echo "Overrode a makefile!"
				EOF
				;;
			npm)
				cat > very/package.json <<- EOF
				{
				  "name": "temp",
				  "version": "1.0.0",
				  "description": "",
				  "main": "index.js",
				  "scripts": {
					"npmScript": "echo Running an npm script!",
					"build": "can't override anthing! Or can I??"
				  },
				  "keywords": [],
				  "author": "",
				  "license": "ISC"
				}
				EOF
				;;
			npm-deep)
				cat > very/deep/package.json <<- EOF
				{
				  "name": "temp",
				  "version": "1.0.0",
				  "description": "",
				  "main": "index.js",
				  "scripts": {
					"npmScript": "echo Running an npm script!",
					"build": "can't override anthing! Or can I??"
				  },
				  "keywords": [],
				  "author": "",
				  "license": "ISC"
				}
				EOF
				;;
		esac
	done
	cd $START_DIR
}


main $@

unset DATA_DIR START_DIR
unset -f project clean single_file main
